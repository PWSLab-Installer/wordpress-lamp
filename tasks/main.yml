#########################################################
# DO Community Playbooks: Wordpress on Ubuntu 18.04 LAMP
#########################################################
---
- name: Install prerequisites
  become: true
  apt: name=aptitude update_cache=yes state=present force_apt_get=yes
  tags: [ system ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Install LAMP Packages
  become: true
  apt: name={{ item }} update_cache=yes state=present
  loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php-fpm', 'php-mysql' ]
  tags: [ system ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Install PHP Extensions
  become: true
  apt: name={{ item }} update_cache=yes state=present
  loop: "{{ php_modules }}"
  tags: [ system ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

# Apache Configuration
- name: Create document root
  file:
    path: "/var/www/{{ http_host }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: '0755'
  tags: [ apache ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Create document root
  file:
    path: "/var/www/{{ http_host }}"
    state: directory
    owner: "apache"
    group: "apache"
    mode: '0755'
  tags: [ apache ]
  when:
    - cent_os.stdout | regex_search("CentOS")

- name: Set up Apache VirtualHost
  template:
    src: "apache.conf.j2"
    dest: "/etc/apache2/sites-available/{{ http_conf }}"
  # notify: Reload Apache
  tags: [ apache ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Enable rewrite module
  shell: /usr/sbin/a2enmod rewrite
  notify: Reload Apache
  tags: [ apache ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Enable rewrite module
  shell: /usr/sbin/a2enmod php7.4
  notify: Restart Apache
  tags: [ apache ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Enable new site
  shell: /usr/sbin/a2ensite {{ http_conf }}
  notify: Reload Apache
  tags: [ apache ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Disable default Apache site
  shell: /usr/sbin/a2dissite 000-default.conf
  notify: Restart Apache
  tags: [ apache ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Remove file (delete file)
  file:
    path: /etc/apache2/sites-enabled/vhosts.conf
    state: absent
  notify: Restart Apache
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

###################################################### CENTOS #####################################################
- name: Install LAMP Packages
  become: true
  yum: name={{ item }} state=present
  loop: [ 'php-mysqlnd', 'php-json' ]
  tags: [ system ]
  when:
    - cent_os.stdout | regex_search("CentOS")

- name: Create Wordpress log directory
  file:
    path: /var/log/wordpress
    state: directory
    mode: '0755'
  when:
    - cent_os.stdout | regex_search("CentOS")

- name: Set up Apache VirtualHost
  template:
    src: "apache.conf.j2"
    dest: "/etc/httpd/conf.d/{{ http_conf }}"
  # notify: Reload Apache
  tags: [ apache ]
  when:
    - cent_os.stdout | regex_search("CentOS")

- name: Remove file (delete file)
  file:
    path: /etc/httpd/conf.d/vhosts.conf
    state: absent
  notify: Restart HTTPD
  when:
    - cent_os.stdout | regex_search("CentOS")

- name: Remove file (delete file)
  file:
    path: /etc/httpd/conf.d/welcome.conf
    state: absent
  notify: Restart HTTPD
  when:
    - cent_os.stdout | regex_search("CentOS")



###################################################################################################################

# MySQL Configuration
# - name: Ensure no user named 'sally' exists at all
#   mysql_user:
#     name: root
#     state: present
#   register: db_user

# - name: Set the root password
#   become: true
#   mysql_user:
#     name: root
#     password: "{{ mysql_root_password }}"
#     update_password: on_create
#     login_unix_socket: /var/run/mysqld/mysqld.sock
#     login_user: root
#     login_password: "{{ mysql_root_password }}"
#   tags: [ mysql, mysql-root ]

# - name: Create `/root/.my.cnf`  with root password credentials
#   template:
#     src:  my.mysql.j2
#     dest: /root/.my.cnf
#     owner: root
#     mode: 0600
#   become: true
#   # notify: Restart MySQL

# - name: Remove all anonymous user accounts
#   become: true
#   mysql_user:
#     name: ''
#     host_all: yes
#     state: absent
#     login_user: root
#     login_unix_socket: /var/run/mysqld/mysqld.sock
#     login_password: "{{ mysql_root_password }}"
#   tags: [ mysql ]

# - name: Remove the MySQL test database
#   become: true
#   mysql_db:
#     name: test
#     state: absent
#     login_unix_socket: /var/run/mysqld/mysqld.sock
#     login_user: root
#     login_password: "{{ mysql_root_password }}"
#   tags: [ mysql ]

# - name: Creates database for WordPress
#   become: true
#   mysql_db:
#     name: "{{ mysql_db }}"
#     login_unix_socket: /var/run/mysqld/mysqld.sock
#     state: present
#     login_user: root
#     login_password: "{{ mysql_root_password }}"
#   tags: [ mysql ]

# - name: Create MySQL user for WordPress
#   become: true
#   mysql_user:
#     name: "{{ mysql_user }}"
#     password: "{{ mysql_password }}"
#     login_unix_socket: /var/run/mysqld/mysqld.sock
#     priv: "{{ mysql_db }}.*:ALL"
#     state: present
#     login_user: root
#     login_password: "{{ mysql_root_password }}"
#   tags: [ mysql ]

# # UFW Configuration
# - name: "UFW - Allow HTTP on port {{ http_port }}"
#   become: true
#   ufw:
#     rule: allow
#     port: "{{ http_port }}"
#     proto: tcp
#   tags: [ system ]

# WordPress Configuration
- name: Create the pwslab-wordpress directory if it does not exist
  become: true
  file:
    path: /var/www/{{ http_host }}
    state: directory
    recurse: yes
    mode: '0777'
    
- name: Download and unpack latest WordPress
  become: true
  unarchive:
    src: https://wordpress.org/latest.tar.gz
    dest: "/var/www/{{ http_host }}"
    remote_src: yes
    creates: "/var/www/{{ http_host }}/wordpress"
  tags: [ wordpress ]

- name: Set ownership
  become: true
  file:
    path: "/var/www/{{ http_host }}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data
  tags: [ wordpress ]
  when:
    - ubuntu_os.stdout | regex_search("Ubuntu")

- name: Set ownership
  become: true
  file:
    path: "/var/www/{{ http_host }}"
    state: directory
    recurse: yes
    owner: apache
    group: apache
  tags: [ wordpress ]
  when:
    - cent_os.stdout | regex_search("CentOS")

- name: Set permissions for directories
  become: true
  shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
  tags: [ wordpress ]

- name: Set permissions for files
  become: true
  shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
  tags: [ wordpress ]

- name: Set up wp-config
  become: true
  template:
    src: "wp-config.php.j2"
    dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
  tags: [ wordpress ]

- name: Create the pwslab-wordpress directory if it does not exist
  become: true
  file:
    path: /var/www/{{ http_host }}
    state: directory
    recurse: yes
    mode: '0777'
